<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($rootScope) {
  /* widget controller */
  var c = this;
	
	c.setShock = function(val){
		var outputObj = {
			"table": c.data.table,
			"action": val
		}
		$rootScope.$broadcast('writeEvent', outputObj);
	}


var jargonObj = {};

	jargonObj.shock = {};
	jargonObj.shock.technical = "Shock";
	jargonObj.shock.layperson = "Defibrillator Shock Administered";
	jargonObj.shock.current = jargonObj.shock.technical;

	jargonObj.dump = {}
	jargonObj.dump.technical = "Dump";
	jargonObj.dump.layperson = "Defibrillator Charge Dumped";
  jargonObj.dump.current = jargonObj.dump.technical;
	
	// ... replace or add new objects for labels to replace following the example above
	
	c.data.jargon = jargonObj; 
	var jargonArray = c.data.jargon; 
	
	// Receive the emitted Data object 
	$rootScope.$on('setJargonState', function(event, data) {	
		c.data.altText = "changed the alt text";
		setCurrentLabel(data);
	});	
	
	// Label-setting Function - will switch between the *.technical (false) and *.layperson (true) values based on the emitted data object

	function setCurrentLabel(trueFalse) {
		var jargonName;
		var jargonType;
		
		for (jargonName in jargonArray) {
			jargonType = jargonArray[jargonName];
			(trueFalse == true) ? jargonType.current = jargonType.layperson : jargonType.current = jargonType.technical;		
		}
	}	
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.btn {
  font-size: 1vw;
  white-space: normal;
}

.btn-shock-wrapper {
  padding: 5px;
  
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>rrp_shock_buttons</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Shock buttons</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	data.table = CONST.SHOCK;
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>david</sys_created_by>
        <sys_created_on>2020-05-02 06:40:13</sys_created_on>
        <sys_id>c86f4d951b685010400ca9bd2a4bcbd7</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>Shock buttons</sys_name>
        <sys_package display_value="Resus Runner" source="x_snc_resus_runner">42f21b89db6850107db9d90d6896195a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Resus Runner">42f21b89db6850107db9d90d6896195a</sys_scope>
        <sys_update_name>sp_widget_c86f4d951b685010400ca9bd2a4bcbd7</sys_update_name>
        <sys_updated_by>kevin</sys_updated_by>
        <sys_updated_on>2020-05-03 12:51:13</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading">
    <h2 class="panel-title">Defibrillation</h2>
  </div>
  
  <div class="panel-body">
    <div style="container">
      <div style="row">
        <div class="col-xs-12 btn-shock-wrapper">
          <button id="rhythm-shock"
                  name="rhythm-shock"
                  class="btn btn-zest btn-danger col-xs-12"
                  ng-click="c.setShock('shock');"
                  >
            {{ c.data.jargon.shock.current }}
          </button>
        </div>
        <div class="col-xs-12 btn-shock-wrapper">
          <button id="rhythm-dump" 
                  name="rhythm-dump" 
                  class="btn btn-zest btn-warning col-xs-12"
                  ng-click="c.setShock('dump');"
                  >
             {{ c.data.jargon.dump.current }}
          </button> 
        </div>
      </div>
    </div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
